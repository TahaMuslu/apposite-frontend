"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { SessionProvider } from "next-auth/react";
import { ConfigProvider, notification } from "antd";
import { useEffect } from "react";
import { useStore } from "@/store";

const inter = Inter({ subsets: ["latin"] });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {

  const [api, notificationHolder] = notification.useNotification();
  const { notificationState } = useStore();


  useEffect(() => {
    if (
      notificationState.type !== undefined &&
      notificationState.message !== ""
    ) {
      api[notificationState.type]({
        message: notificationState.message,
        description: notificationState.description,
        placement: notificationState.placement,
        duration: notificationState.duration,
        className: notificationState.className,
        type: notificationState.type,
      });
    }
  }, [notificationState]);

  return (
    <html lang="en">
      <body className={`${inter.className} min-h-screen min-w-screen`}>
        <SessionProvider>
          <ConfigProvider
            theme={{
              components: {
                Input: {
                  activeBorderColor: "rgb(220, 38, 38) !important",
                  hoverBorderColor: "rgb(239, 68, 68) !important",
                  colorPrimary: "rgb(220, 38, 38) !important",
                  colorPrimaryActive: "rgb(239, 68, 68) !important",
                  colorPrimaryHover: "rgb(239, 68, 68) !important",
                  colorPrimaryBorder: "rgb(220, 38, 38) !important",
                  colorPrimaryBorderHover: "rgb(239, 68, 68) !important",
                  colorIconHover: "rgb(239, 68, 68) !important",
                  colorInfoBorderHover: "rgb(239, 68, 68) !important",
                  activeShadow: "0 0 0 2px rgba(239, 68, 68,0.1)"
                },
                Button: {
                  colorPrimaryBg: "rgb(220, 38, 38) !important",
                  defaultActiveBg: "rgb(239, 68, 68) !important",
                  colorIconHover: "rgb(239, 68, 68) !important",
                  defaultHoverBorderColor: "rgb(239, 68, 68) !important",
                }
              },
              token: {
              }
            }}
          >
            {notificationHolder}
            {children}
          </ConfigProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
